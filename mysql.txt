// mysql語法
mysql -uroot -p
--> -u : user, -p : password

// 檢查用的欄位, check(true/false)
ALTER table t3
    ADD CONSTRAINT chk_data check (data >= 0)
--> 不通過的資料不會被新增進資料表
--> 八版才可以用！！！

Point : 一對多時，設條件是要在多的那邊

// Point
CREATE TABLE customers(
    customerId int primary key,
    companyName varchar(20) 
);

INSERT into  customers VALUES
    (1,'AAA'),(2,'BBB'),(3,'CCC');

CREATE TABLE orders(
    orderId int primary key,
    customerId int,
);

INSERT into  orders VALUES
    (1,1),(2,2),(3,3);

AlTER TABLE orders 
    ADD CONSTRAINT fk_customers_orders
        foreign key (customerId) references customers (customerId)
            on UPDATE cascade
            on DELETE cascade;
--> 最後兩句表示，customers update 和 delete 時也一起更動orders裡的編號

INSERT into  orders VALUES (4,99);
--> 失敗！

INSERT into  orders VALUES (4,3);

UPDATE customers SET customerId = 100 WHERE  customerId = 1;
--> orders的也會跟著變

DELETE FROM customers WHERE customerId = 100;
--> orders的資料也會被刪掉

Alert : 一對多時，要刪除一的資料時，要先處理多那一邊的資料！！！

// unique : 獨一無二
ALTER table customers ADD CONSTRAINT uc UNIQUE (companyName)
INSERT into customers VALUES (4,'AAA')
--> 失敗

--> 建立時用什麼方法，刪除時就要一樣
ALTER table customers DROP INDEX uc;

--> 在其他的伺服器上面會是:
ALTER table customers DROP CONSTRAINT uc;

// UNIQUE INDEX
CREATE UNIQUE INDEX idx_company ON customers(companyName)
INSERT into customers VALUES (4,'AAA')
--> 失敗

ALTER index idx_company ON customers

// 尋找位置
show variables like 'data%'
show databases

// 在OS中用終端機開啟mysql要打完整
/Applications/MAMP/Library/bin/mysql -uroot -p

// 資料表類型
CREATE TABLE lab(
    id int ...
) engine = MyISAM;

--> MyISAM : 有.frm (結構) .myd (資料) .myi (索引), 可以用MERGE(使這個表讀到連接的表)
CREATE TABLE lab(
    id int ...
) engine = MERGE union = (t1, t2) insert_method = first;
--> 在lab中新增資料會讓第一個資料表t1也新增(只能選第一個或最後一個或都不要) 

--> InnDB : 只有.frm, 但是可以用ROLLBACK, 因為會做log紀錄

--> Memory : 適合做暫存

--> Federated : 影子資料表

// 設定同時最大連線量
set global max_connections = 10

// 了解現在連線狀況
status

// 網管查看現在連線人
show processlist

// 移除練線
kill 代號

// 檢視資料結構
show databases;
show create database northwind
--> 比較像是查看創造時的語法

show tables
describe customers = desc customers
show create table customers
show columns from customers

// 網管(以下)
// 選擇資料庫
use mysql;

// 顯示全部資料表
show table;

// 給予一個使用者權限
grant usage on *.* to carl@'%' identified by 'pa$$w0rd';
--> *.* : 所有資料庫.所有資料表
--> @'%' : 不管從哪裡登入(不打就是這個)
--> 帳號有分大小寫！！！(carl!=Carl)

// 新增一個使用者
create user jeter identified by 'pa$$w0rd';

// 查看各使用者的權限以及權域
select user, host, password from user;
select host, db, user, select_priv, insert_priv, update_priv from db;
select host, db, user, table_name, table_priv from tables_priv;

// 重設密碼
set password for carl = password('Pa$$w0rd');

// 試試看
select customerID, companyName from northwind.customers;
--> 失敗，因為沒有權限

// 給予select權限
grant select on northwind.* to carl;

// 再試試
select customerID, companyName from northwind.customers;
--> 成功

// 換一個
update customers set companyName = 'Lab Company' where customerID = 'ALFKI';
--> 失敗

// 給予update權限(特定的資料表)
grant update on northwind.customers to carl;

// 再來
update customers set companyName = 'Lab Company' where customerID = 'ALFKI';
--> 成功

// 回收權限
revoke update on northwind.customers from carl;
